= day_questions

day_questions adds helper methods for determining if a specified date/time was
yesterday, today, or tomorrow.

== Resources

Wiki

* http://wiki.pluginaweek.org/Day_questions

Announcement

* http://www.pluginaweek.org/2006/12/10/7-and-8-date-and-time-get-a-little-extra-oomph/

Source

* http://svn.pluginaweek.org/trunk/plugins/ruby/time/day_questions

Development

* http://dev.pluginaweek.org/browser/trunk/plugins/ruby/time/day_questions

== Description

This plugin encapsulates the common question of finding out if a date/time
represents a day that was yesterday, today, or tomorrow.  For example,

  >> 1.day.ago.yesterday?
  => true
  >> Time.now.today?
  => true
  >> 1.day.from_now.tomorrow?
  => true

In addition, you can find out if the day was around the current day (meaning it
was either yesterday, today, or tomorrow):

  >> 2.days.ago.around_today?
  => false
  >> 1.day.ago.around_today?
  => true
  >> Time.now.around_today?
  => true
  >> 1.day.from_now.around_today?
  => true
  >> 2.days.from_now.around_today?
  => false

Finally, there also exists a helper method to output a humanized version of the
current day which will return "Yesterday", "Today", "Tomorrow" or a custom
date format if it is outside the range of around today.  For example,

  >> 2.days.ago.human_day
  => "on 12/31"
  >> 1.day.ago.human_day
  => "Yesterday"
  >> Time.now.human_day
  => "Today"
  >> 1.day.from_now.human_day
  => "Tomorrow"
  >> 2.days.from_now.human_day('%a')
  => "Sun"

== Tips

With the addition of the interpolated_time_formats plugin, you can output a
string version of the time/date with human_day like so:

  >> Time.now.strftime('#{human_day} at #{hour}')
  => "Today at 5"